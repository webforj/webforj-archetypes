<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
#if( ${flavor} == "webforj-spring" )

  <parent>
    <groupId>org.springframework.boot</groupId>
    <artifactId>spring-boot-starter-parent</artifactId>
    <version>3.5.3</version>
  </parent>
#end

  <groupId>\${groupId}</groupId>
  <artifactId>\${artifactId}</artifactId>
  <name>\${appName}</name>
  <version>\${version}</version>
#if( ${flavor} == "webforj" )
  <packaging>war</packaging>
#else
  <packaging>jar</packaging>
#end

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

    <maven.compiler.source>21</maven.compiler.source>
    <maven.compiler.target>21</maven.compiler.target>

    <webforj.version>${webforj.version}</webforj.version>
#if( ${flavor} == "webforj" )

    <jetty.version>12.0.14</jetty.version>
    <!--
      Configures automatic reload of Jetty server
      (with 1 second timeout) when new classes are compiled.
      Should be disabled when using a live reload system, such as JRebel.
      -->
    <jetty.scan>1</jetty.scan>
    <jetty.port>8080</jetty.port>
    <jetty.stopPort>9966</jetty.stopPort>
    <jetty.stopWait>30</jetty.stopWait>
#end
  </properties>

  <repositories>
    <repository>
      <name>Central Portal Snapshots</name>
      <id>central-portal-snapshots</id>
      <url>https://central.sonatype.com/repository/maven-snapshots/</url>
      <releases>
        <enabled>false</enabled>
      </releases>
      <snapshots>
        <enabled>true</enabled>
      </snapshots>
    </repository>
  </repositories>

  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>com.webforj</groupId>
        <artifactId>webforj-bom</artifactId>
        <version>\${webforj.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
#if( ${flavor} == "webforj" )

      <dependency>
        <groupId>org.junit</groupId>
        <artifactId>junit-bom</artifactId>
        <version>5.10.3</version>
        <scope>import</scope>
        <type>pom</type>
      </dependency>
#end
    </dependencies>
  </dependencyManagement>

  <dependencies>
    <dependency>
      <groupId>com.webforj</groupId>
      <artifactId>webforj</artifactId>
      <version>\${webforj.version}</version>
    </dependency>

#if( ${flavor} == "webforj-spring" )
    <dependency>
      <groupId>com.webforj</groupId>
      <artifactId>webforj-spring-boot-starter</artifactId>
    </dependency>

    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-validation</artifactId>
    </dependency>

    <!-- <dependency>
      <groupId>com.h2database</groupId>
      <artifactId>h2</artifactId>
    </dependency>

    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-data-jpa</artifactId>
    </dependency> -->

    <dependency>
      <groupId>com.webforj</groupId>
      <artifactId>webforj-spring-devtools</artifactId>
      <optional>true</optional>
    </dependency>

    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-devtools</artifactId>
      <optional>true</optional>
    </dependency>

    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-test</artifactId>
      <scope>test</scope>
      <exclusions>
        <exclusion>
          <groupId>com.vaadin.external.google</groupId>
          <artifactId>android-json</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
#else
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-api</artifactId>
      <scope>test</scope>
    </dependency>
#end

    <dependency>
      <groupId>com.microsoft.playwright</groupId>
      <artifactId>playwright</artifactId>
      <version>1.49.0</version>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <build>
#if( ${flavor} == "webforj-spring" )
    <defaultGoal>spring-boot:run</defaultGoal>
#else
    <defaultGoal>jetty:run</defaultGoal>
#end
    <plugins>
#if( ${flavor} == "webforj-spring" )
      <plugin>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-maven-plugin</artifactId>
        <configuration>
          <excludeDevtools>true</excludeDevtools>
        </configuration>
      </plugin>
#else

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-war-plugin</artifactId>
        <version>3.4.0</version>
        <configuration>
          <webResources>
            <resource>
              <filtering>true</filtering>
              <directory>src/main/webapp</directory>
              <includes>
                <include>**/web.xml</include>
              </includes>
            </resource>
          </webResources>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.eclipse.jetty.ee10</groupId>
        <artifactId>jetty-ee10-maven-plugin</artifactId>
        <version>${jetty.version}</version>
        <configuration>
          <scan>${jetty.scan}</scan>
          <stopPort>${jetty.stopPort}</stopPort>
          <stopKey>\${project.artifactId}</stopKey>
          <stopWait>\${jetty.stopWait}</stopWait>
          <httpConnector>
            <port>${jetty.port}</port>
          </httpConnector>
          <webApp>
            <contextPath>/</contextPath>
          </webApp>
        </configuration>
        <executions>
          <execution>
            <id>start-jetty</id>
            <phase>pre-integration-test</phase>
            <goals>
              <goal>start</goal>
            </goals>
          </execution>
          <execution>
            <id>stop-jetty</id>
            <phase>post-integration-test</phase>
            <goals>
              <goal>stop</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
#end

      <!-- Runs the integration tests (*IT) after the server is started -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-failsafe-plugin</artifactId>
        <version>3.0.0-M7</version>
        <executions>
          <execution>
            <goals>
              <goal>integration-test</goal>
              <goal>verify</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <trimStackTrace>false</trimStackTrace>
        </configuration>
      </plugin>
#if( ${flavor} != "webforj-spring" )

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-antrun-plugin</artifactId>
        <version>3.1.0</version>
        <executions>
          <execution>
            <id>copy-webforj-config</id>
            <phase>process-resources</phase>
            <configuration>
              <target>
                <copy file="src/main/resources/${config.file}"
                  tofile="\${project.build.outputDirectory}/webforj.conf" />
              </target>
            </configuration>
            <goals>
              <goal>run</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
#end
    </plugins>
  </build>

  <profiles>
    <profile>
      <id>prod</id>
      <activation>
      </activation>
#if( ${flavor} != "webforj-spring" )
      <properties>
        <config.file>webforj-prod.conf</config.file>
      </properties>
#end
#if( ${flavor} == "webforj-spring" )
      <build>
        <plugins>
          <plugin>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-maven-plugin</artifactId>
            <configuration>
              <excludeDevtools>true</excludeDevtools>
              <excludes>
                <exclude>
                  <groupId>com.webforj</groupId>
                  <artifactId>webforj-spring-devtools</artifactId>
                </exclude>
              </excludes>
            </configuration>
          </plugin>
        </plugins>
      </build>
#end
    </profile>
    <profile>
      <id>dev</id>
      <activation>
        <activeByDefault>true</activeByDefault>
      </activation>
#if( ${flavor} != "webforj-spring" )
      <properties>
        <config.file>webforj-dev.conf</config.file>
      </properties>
#end
    </profile>
  </profiles>
</project>
